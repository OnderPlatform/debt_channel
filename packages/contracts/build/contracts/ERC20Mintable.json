{
  "contractName": "ERC20Mintable",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isMinter",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x60806040526100163364010000000061001b810204565b6100f8565b6100336003826401000000006108b261006a82021704565b604051600160a060020a038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b600160a060020a038116151561007f57600080fd5b61009282826401000000006100c1810204565b1561009c57600080fd5b600160a060020a0316600090815260209190915260409020805460ff19166001179055565b6000600160a060020a03821615156100d857600080fd5b50600160a060020a03166000908152602091909152604090205460ff1690565b610978806101076000396000f3fe6080604052600436106100b3577c01000000000000000000000000000000000000000000000000000000006000350463095ea7b381146100b857806318160ddd1461010557806323b872dd1461012c578063395093511461016f57806340c10f19146101a857806370a08231146101e1578063983b2d56146102145780639865027514610249578063a457c2d71461025e578063a9059cbb14610297578063aa271e1a146102d0578063dd62ed3e14610303575b600080fd5b3480156100c457600080fd5b506100f1600480360360408110156100db57600080fd5b50600160a060020a03813516906020013561033e565b604080519115158252519081900360200190f35b34801561011157600080fd5b5061011a6103bc565b60408051918252519081900360200190f35b34801561013857600080fd5b506100f16004803603606081101561014f57600080fd5b50600160a060020a038135811691602081013590911690604001356103c2565b34801561017b57600080fd5b506100f16004803603604081101561019257600080fd5b50600160a060020a03813516906020013561048b565b3480156101b457600080fd5b506100f1600480360360408110156101cb57600080fd5b50600160a060020a03813516906020013561053b565b3480156101ed57600080fd5b5061011a6004803603602081101561020457600080fd5b5035600160a060020a0316610564565b34801561022057600080fd5b506102476004803603602081101561023757600080fd5b5035600160a060020a031661057f565b005b34801561025557600080fd5b5061024761059f565b34801561026a57600080fd5b506100f16004803603604081101561028157600080fd5b50600160a060020a0381351690602001356105aa565b3480156102a357600080fd5b506100f1600480360360408110156102ba57600080fd5b50600160a060020a0381351690602001356105f5565b3480156102dc57600080fd5b506100f1600480360360208110156102f357600080fd5b5035600160a060020a0316610602565b34801561030f57600080fd5b5061011a6004803603604081101561032657600080fd5b50600160a060020a038135811691602001351661061b565b6000600160a060020a038316151561035557600080fd5b336000818152600160209081526040808320600160a060020a03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a350600192915050565b60025490565b600160a060020a03831660009081526001602090815260408083203384529091528120546103f6908363ffffffff61064616565b600160a060020a038516600090815260016020908152604080832033845290915290205561042584848461065b565b600160a060020a0384166000818152600160209081526040808320338085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b6000600160a060020a03831615156104a257600080fd5b336000908152600160209081526040808320600160a060020a03871684529091529020546104d6908363ffffffff61072816565b336000818152600160209081526040808320600160a060020a0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b600061054633610602565b151561055157600080fd5b61055b8383610741565b50600192915050565b600160a060020a031660009081526020819052604090205490565b61058833610602565b151561059357600080fd5b61059c816107eb565b50565b6105a833610833565b565b6000600160a060020a03831615156105c157600080fd5b336000908152600160209081526040808320600160a060020a03871684529091529020546104d6908363ffffffff61064616565b600061055b33848461065b565b600061061560038363ffffffff61087b16565b92915050565b600160a060020a03918216600090815260016020908152604080832093909416825291909152205490565b60008282111561065557600080fd5b50900390565b600160a060020a038216151561067057600080fd5b600160a060020a038316600090815260208190526040902054610699908263ffffffff61064616565b600160a060020a0380851660009081526020819052604080822093909355908416815220546106ce908263ffffffff61072816565b600160a060020a038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008282018381101561073a57600080fd5b9392505050565b600160a060020a038216151561075657600080fd5b600254610769908263ffffffff61072816565b600255600160a060020a038216600090815260208190526040902054610795908263ffffffff61072816565b600160a060020a0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6107fc60038263ffffffff6108b216565b604051600160a060020a038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b61084460038263ffffffff61090016565b604051600160a060020a038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b6000600160a060020a038216151561089257600080fd5b50600160a060020a03166000908152602091909152604090205460ff1690565b600160a060020a03811615156108c757600080fd5b6108d1828261087b565b156108db57600080fd5b600160a060020a0316600090815260209190915260409020805460ff19166001179055565b600160a060020a038116151561091557600080fd5b61091f828261087b565b151561092a57600080fd5b600160a060020a0316600090815260209190915260409020805460ff1916905556fea165627a7a7230582068fc49e72b806c2c1a5a3f57a35ead53ebca828e6d35e78d0797c24a731701410029",
  "deployedBytecode": "0x6080604052600436106100b3577c01000000000000000000000000000000000000000000000000000000006000350463095ea7b381146100b857806318160ddd1461010557806323b872dd1461012c578063395093511461016f57806340c10f19146101a857806370a08231146101e1578063983b2d56146102145780639865027514610249578063a457c2d71461025e578063a9059cbb14610297578063aa271e1a146102d0578063dd62ed3e14610303575b600080fd5b3480156100c457600080fd5b506100f1600480360360408110156100db57600080fd5b50600160a060020a03813516906020013561033e565b604080519115158252519081900360200190f35b34801561011157600080fd5b5061011a6103bc565b60408051918252519081900360200190f35b34801561013857600080fd5b506100f16004803603606081101561014f57600080fd5b50600160a060020a038135811691602081013590911690604001356103c2565b34801561017b57600080fd5b506100f16004803603604081101561019257600080fd5b50600160a060020a03813516906020013561048b565b3480156101b457600080fd5b506100f1600480360360408110156101cb57600080fd5b50600160a060020a03813516906020013561053b565b3480156101ed57600080fd5b5061011a6004803603602081101561020457600080fd5b5035600160a060020a0316610564565b34801561022057600080fd5b506102476004803603602081101561023757600080fd5b5035600160a060020a031661057f565b005b34801561025557600080fd5b5061024761059f565b34801561026a57600080fd5b506100f16004803603604081101561028157600080fd5b50600160a060020a0381351690602001356105aa565b3480156102a357600080fd5b506100f1600480360360408110156102ba57600080fd5b50600160a060020a0381351690602001356105f5565b3480156102dc57600080fd5b506100f1600480360360208110156102f357600080fd5b5035600160a060020a0316610602565b34801561030f57600080fd5b5061011a6004803603604081101561032657600080fd5b50600160a060020a038135811691602001351661061b565b6000600160a060020a038316151561035557600080fd5b336000818152600160209081526040808320600160a060020a03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a350600192915050565b60025490565b600160a060020a03831660009081526001602090815260408083203384529091528120546103f6908363ffffffff61064616565b600160a060020a038516600090815260016020908152604080832033845290915290205561042584848461065b565b600160a060020a0384166000818152600160209081526040808320338085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b6000600160a060020a03831615156104a257600080fd5b336000908152600160209081526040808320600160a060020a03871684529091529020546104d6908363ffffffff61072816565b336000818152600160209081526040808320600160a060020a0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b600061054633610602565b151561055157600080fd5b61055b8383610741565b50600192915050565b600160a060020a031660009081526020819052604090205490565b61058833610602565b151561059357600080fd5b61059c816107eb565b50565b6105a833610833565b565b6000600160a060020a03831615156105c157600080fd5b336000908152600160209081526040808320600160a060020a03871684529091529020546104d6908363ffffffff61064616565b600061055b33848461065b565b600061061560038363ffffffff61087b16565b92915050565b600160a060020a03918216600090815260016020908152604080832093909416825291909152205490565b60008282111561065557600080fd5b50900390565b600160a060020a038216151561067057600080fd5b600160a060020a038316600090815260208190526040902054610699908263ffffffff61064616565b600160a060020a0380851660009081526020819052604080822093909355908416815220546106ce908263ffffffff61072816565b600160a060020a038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008282018381101561073a57600080fd5b9392505050565b600160a060020a038216151561075657600080fd5b600254610769908263ffffffff61072816565b600255600160a060020a038216600090815260208190526040902054610795908263ffffffff61072816565b600160a060020a0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6107fc60038263ffffffff6108b216565b604051600160a060020a038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b61084460038263ffffffff61090016565b604051600160a060020a038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b6000600160a060020a038216151561089257600080fd5b50600160a060020a03166000908152602091909152604090205460ff1690565b600160a060020a03811615156108c757600080fd5b6108d1828261087b565b156108db57600080fd5b600160a060020a0316600090815260209190915260409020805460ff19166001179055565b600160a060020a038116151561091557600080fd5b61091f828261087b565b151561092a57600080fd5b600160a060020a0316600090815260209190915260409020805460ff1916905556fea165627a7a7230582068fc49e72b806c2c1a5a3f57a35ead53ebca828e6d35e78d0797c24a731701410029",
  "sourceMap": "136:421:8:-;;;275:22:9;286:10;275;;;;:22;:::i;:::-;136:421:8;;685:119:9;741:21;:8;754:7;741:12;;;;;;:21;:::i;:::-;777:20;;-1:-1:-1;;;;;777:20:9;;;;;;;;685:119;:::o;259:181:4:-;-1:-1:-1;;;;;335:21:4;;;;327:30;;;;;;376:18;380:4;386:7;376:3;;;;:18;:::i;:::-;375:19;367:28;;;;;;-1:-1:-1;;;;;406:20:4;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;406:27:4;429:4;406:27;;;259:181::o;786:162::-;858:4;-1:-1:-1;;;;;882:21:4;;;;874:30;;;;;;-1:-1:-1;;;;;;921:20:4;:11;:20;;;;;;;;;;;;;;;786:162::o;136:421:8:-;;;;;;;",
  "deployedSourceMap": "136:421:8:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2725:238:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2725:238:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2725:238:7;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;926:89;;8:9:-1;5:2;;;30:1;27;20:12;5:2;926:89:7;;;:::i;:::-;;;;;;;;;;;;;;;;3426:294;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3426:294:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3426:294:7;;;;;;;;;;;;;;;;;:::i;4223:317::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4223:317:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4223:317:7;;;;;;;;:::i;427:128:8:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;427:128:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;427:128:8;;;;;;;;:::i;1224:104:7:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1224:104:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1224:104:7;-1:-1:-1;;;;;1224:104:7;;:::i;508:90:9:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;508:90:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;508:90:9;-1:-1:-1;;;;;508:90:9;;:::i;:::-;;604:75;;8:9:-1;5:2;;;30:1;27;20:12;5:2;604:75:9;;;:::i;5048:327:7:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5048:327:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;5048:327:7;;;;;;;;:::i;1952:137::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1952:137:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1952:137:7;;;;;;;;:::i;395:107:9:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;395:107:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;395:107:9;-1:-1:-1;;;;;395:107:9;;:::i;1659:129:7:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1659:129:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1659:129:7;;;;;;;;;;:::i;2725:238::-;2790:4;-1:-1:-1;;;;;2814:21:7;;;;2806:30;;;;;;2856:10;2847:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;2847:29:7;;;;;;;;;;;;:37;;;2899:36;;;;;;;2847:29;;2856:10;2899:36;;;;;;;;;;;-1:-1:-1;2952:4:7;2725:238;;;;:::o;926:89::-;996:12;;926:89;:::o;3426:294::-;-1:-1:-1;;;;;3550:14:7;;3505:4;3550:14;;;:8;:14;;;;;;;;3565:10;3550:26;;;;;;;;:37;;3581:5;3550:37;:30;:37;:::i;:::-;-1:-1:-1;;;;;3521:14:7;;;;;;:8;:14;;;;;;;;3536:10;3521:26;;;;;;;:66;3597:26;3530:4;3613:2;3617:5;3597:9;:26::i;:::-;-1:-1:-1;;;;;3638:54:7;;3665:14;;;;:8;:14;;;;;;;;3653:10;3665:26;;;;;;;;;;;3638:54;;;;;;;3653:10;;3638:54;;;;;;;;;;;;-1:-1:-1;3709:4:7;3426:294;;;;;:::o;4223:317::-;4303:4;-1:-1:-1;;;;;4327:21:7;;;;4319:30;;;;;;4401:10;4392:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4392:29:7;;;;;;;;;;:45;;4426:10;4392:45;:33;:45;:::i;:::-;4369:10;4360:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4360:29:7;;;;;;;;;;;;:77;;;4452:60;;;;;;4360:29;;4452:60;;;;;;;;;;;-1:-1:-1;4529:4:7;4223:317;;;;:::o;427:128:8:-;495:4;350:20:9;359:10;350:8;:20::i;:::-;342:29;;;;;;;;511:16:8;517:2;521:5;511;:16::i;:::-;-1:-1:-1;544:4:8;427:128;;;;:::o;1224:104:7:-;-1:-1:-1;;;;;1305:16:7;1279:7;1305:16;;;;;;;;;;;;1224:104::o;508:90:9:-;350:20;359:10;350:8;:20::i;:::-;342:29;;;;;;;;572:19;583:7;572:10;:19::i;:::-;508:90;:::o;604:75::-;647:25;661:10;647:13;:25::i;:::-;604:75::o;5048:327:7:-;5133:4;-1:-1:-1;;;;;5157:21:7;;;;5149:30;;;;;;5231:10;5222:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;5222:29:7;;;;;;;;;;:50;;5256:15;5222:50;:33;:50;:::i;1952:137::-;2013:4;2029:32;2039:10;2051:2;2055:5;2029:9;:32::i;395:107:9:-;451:4;474:21;:8;487:7;474:21;:12;:21;:::i;:::-;467:28;395:107;-1:-1:-1;;395:107:9:o;1659:129:7:-;-1:-1:-1;;;;;1757:15:7;;;1731:7;1757:15;;;:8;:15;;;;;;;;:24;;;;;;;;;;;;;1659:129::o;1166:145:5:-;1224:7;1251:6;;;;1243:15;;;;;;-1:-1:-1;1280:5:5;;;1166:145::o;5589:256:7:-;-1:-1:-1;;;;;5676:16:7;;;;5668:25;;;;;;-1:-1:-1;;;;;5722:15:7;;:9;:15;;;;;;;;;;;:26;;5742:5;5722:26;:19;:26;:::i;:::-;-1:-1:-1;;;;;5704:15:7;;;:9;:15;;;;;;;;;;;:44;;;;5774:13;;;;;;;:24;;5792:5;5774:24;:17;:24;:::i;:::-;-1:-1:-1;;;;;5758:13:7;;;:9;:13;;;;;;;;;;;;:40;;;;5813:25;;;;;;;5758:13;;5813:25;;;;;;;;;;;;;5589:256;;;:::o;1382:145:5:-;1440:7;1471:5;;;1494:6;;;;1486:15;;;;;;1519:1;1382:145;-1:-1:-1;;;1382:145:5:o;6188:263:7:-;-1:-1:-1;;;;;6262:21:7;;;;6254:30;;;;;;6310:12;;:23;;6327:5;6310:23;:16;:23;:::i;:::-;6295:12;:38;-1:-1:-1;;;;;6364:18:7;;:9;:18;;;;;;;;;;;:29;;6387:5;6364:29;:22;:29;:::i;:::-;-1:-1:-1;;;;;6343:18:7;;:9;:18;;;;;;;;;;;:50;;;;6408:36;;;;;;;6343:18;;:9;;6408:36;;;;;;;;;;6188:263;;:::o;685:119:9:-;741:21;:8;754:7;741:21;:12;:21;:::i;:::-;777:20;;-1:-1:-1;;;;;777:20:9;;;;;;;;685:119;:::o;810:127::-;869:24;:8;885:7;869:24;:15;:24;:::i;:::-;908:22;;-1:-1:-1;;;;;908:22:9;;;;;;;;810:127;:::o;786:162:4:-;858:4;-1:-1:-1;;;;;882:21:4;;;;874:30;;;;;;-1:-1:-1;;;;;;921:20:4;:11;:20;;;;;;;;;;;;;;;786:162::o;259:181::-;-1:-1:-1;;;;;335:21:4;;;;327:30;;;;;;376:18;380:4;386:7;376:3;:18::i;:::-;375:19;367:28;;;;;;-1:-1:-1;;;;;406:20:4;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;406:27:4;429:4;406:27;;;259:181::o;514:184::-;-1:-1:-1;;;;;593:21:4;;;;585:30;;;;;;633:18;637:4;643:7;633:3;:18::i;:::-;625:27;;;;;;;;-1:-1:-1;;;;;663:20:4;686:5;663:20;;;;;;;;;;;:28;;-1:-1:-1;;663:28:4;;;514:184::o",
  "source": "pragma solidity ^0.5.0;\n\nimport \"./ERC20.sol\";\nimport \".//MinterRole.sol\";\n\n/**\n * @title ERC20Mintable\n * @dev ERC20 minting logic\n */\ncontract ERC20Mintable is ERC20, MinterRole {\n    /**\n     * @dev Function to mint tokens\n     * @param to The address that will receive the minted tokens.\n     * @param value The amount of tokens to mint.\n     * @return A boolean that indicates if the operation was successful.\n     */\n    function mint(address to, uint256 value) public onlyMinter returns (bool) {\n        _mint(to, value);\n        return true;\n    }\n}\n",
  "sourcePath": "/Users/ukstv/Desktop/debt_channel/packages/contracts/contracts/vendor/support/ERC20Mintable.sol",
  "ast": {
    "absolutePath": "/Users/ukstv/Desktop/debt_channel/packages/contracts/contracts/vendor/support/ERC20Mintable.sol",
    "exportedSymbols": {
      "ERC20Mintable": [
        1086
      ]
    },
    "id": 1087,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1060,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:8"
      },
      {
        "absolutePath": "/Users/ukstv/Desktop/debt_channel/packages/contracts/contracts/vendor/support/ERC20.sol",
        "file": "./ERC20.sol",
        "id": 1061,
        "nodeType": "ImportDirective",
        "scope": 1087,
        "sourceUnit": 1059,
        "src": "25:21:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/ukstv/Desktop/debt_channel/packages/contracts/contracts/vendor/support/MinterRole.sol",
        "file": ".//MinterRole.sol",
        "id": 1062,
        "nodeType": "ImportDirective",
        "scope": 1087,
        "sourceUnit": 1190,
        "src": "47:27:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1063,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1058,
              "src": "162:5:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$1058",
                "typeString": "contract ERC20"
              }
            },
            "id": 1064,
            "nodeType": "InheritanceSpecifier",
            "src": "162:5:8"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1065,
              "name": "MinterRole",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1189,
              "src": "169:10:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MinterRole_$1189",
                "typeString": "contract MinterRole"
              }
            },
            "id": 1066,
            "nodeType": "InheritanceSpecifier",
            "src": "169:10:8"
          }
        ],
        "contractDependencies": [
          192,
          1058,
          1189
        ],
        "contractKind": "contract",
        "documentation": "@title ERC20Mintable\n@dev ERC20 minting logic",
        "fullyImplemented": true,
        "id": 1086,
        "linearizedBaseContracts": [
          1086,
          1189,
          1058,
          192
        ],
        "name": "ERC20Mintable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1084,
              "nodeType": "Block",
              "src": "501:54:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1078,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1068,
                        "src": "517:2:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1079,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1070,
                        "src": "521:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1077,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 973,
                      "src": "511:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1080,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "511:16:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1081,
                  "nodeType": "ExpressionStatement",
                  "src": "511:16:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 1082,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "544:4:8",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 1076,
                  "id": 1083,
                  "nodeType": "Return",
                  "src": "537:11:8"
                }
              ]
            },
            "documentation": "@dev Function to mint tokens\n@param to The address that will receive the minted tokens.\n@param value The amount of tokens to mint.\n@return A boolean that indicates if the operation was successful.",
            "id": 1085,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1073,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1072,
                  "name": "onlyMinter",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1122,
                  "src": "475:10:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "475:10:8"
              }
            ],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1071,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1068,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 1085,
                  "src": "441:10:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1067,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "441:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1070,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 1085,
                  "src": "453:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1069,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "453:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "440:27:8"
            },
            "returnParameters": {
              "id": 1076,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1075,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1085,
                  "src": "495:4:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1074,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "495:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "494:6:8"
            },
            "scope": 1086,
            "src": "427:128:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1087,
        "src": "136:421:8"
      }
    ],
    "src": "0:558:8"
  },
  "legacyAST": {
    "absolutePath": "/Users/ukstv/Desktop/debt_channel/packages/contracts/contracts/vendor/support/ERC20Mintable.sol",
    "exportedSymbols": {
      "ERC20Mintable": [
        1086
      ]
    },
    "id": 1087,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1060,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:8"
      },
      {
        "absolutePath": "/Users/ukstv/Desktop/debt_channel/packages/contracts/contracts/vendor/support/ERC20.sol",
        "file": "./ERC20.sol",
        "id": 1061,
        "nodeType": "ImportDirective",
        "scope": 1087,
        "sourceUnit": 1059,
        "src": "25:21:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/ukstv/Desktop/debt_channel/packages/contracts/contracts/vendor/support/MinterRole.sol",
        "file": ".//MinterRole.sol",
        "id": 1062,
        "nodeType": "ImportDirective",
        "scope": 1087,
        "sourceUnit": 1190,
        "src": "47:27:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1063,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1058,
              "src": "162:5:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$1058",
                "typeString": "contract ERC20"
              }
            },
            "id": 1064,
            "nodeType": "InheritanceSpecifier",
            "src": "162:5:8"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1065,
              "name": "MinterRole",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1189,
              "src": "169:10:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MinterRole_$1189",
                "typeString": "contract MinterRole"
              }
            },
            "id": 1066,
            "nodeType": "InheritanceSpecifier",
            "src": "169:10:8"
          }
        ],
        "contractDependencies": [
          192,
          1058,
          1189
        ],
        "contractKind": "contract",
        "documentation": "@title ERC20Mintable\n@dev ERC20 minting logic",
        "fullyImplemented": true,
        "id": 1086,
        "linearizedBaseContracts": [
          1086,
          1189,
          1058,
          192
        ],
        "name": "ERC20Mintable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1084,
              "nodeType": "Block",
              "src": "501:54:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1078,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1068,
                        "src": "517:2:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1079,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1070,
                        "src": "521:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1077,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 973,
                      "src": "511:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1080,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "511:16:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1081,
                  "nodeType": "ExpressionStatement",
                  "src": "511:16:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 1082,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "544:4:8",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 1076,
                  "id": 1083,
                  "nodeType": "Return",
                  "src": "537:11:8"
                }
              ]
            },
            "documentation": "@dev Function to mint tokens\n@param to The address that will receive the minted tokens.\n@param value The amount of tokens to mint.\n@return A boolean that indicates if the operation was successful.",
            "id": 1085,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1073,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1072,
                  "name": "onlyMinter",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1122,
                  "src": "475:10:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "475:10:8"
              }
            ],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1071,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1068,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 1085,
                  "src": "441:10:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1067,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "441:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1070,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 1085,
                  "src": "453:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1069,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "453:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "440:27:8"
            },
            "returnParameters": {
              "id": 1076,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1075,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1085,
                  "src": "495:4:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1074,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "495:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "494:6:8"
            },
            "scope": 1086,
            "src": "427:128:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1087,
        "src": "136:421:8"
      }
    ],
    "src": "0:558:8"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.1+commit.c8a2cb62.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.0-beta.2",
  "updatedAt": "2018-12-08T12:34:40.915Z",
  "devdoc": {
    "details": "ERC20 minting logic",
    "methods": {
      "allowance(address,address)": {
        "details": "Function to check the amount of tokens that an owner allowed to a spender.",
        "params": {
          "owner": "address The address which owns the funds.",
          "spender": "address The address which will spend the funds."
        },
        "return": "A uint256 specifying the amount of tokens still available for the spender."
      },
      "approve(address,uint256)": {
        "details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729",
        "params": {
          "spender": "The address which will spend the funds.",
          "value": "The amount of tokens to be spent."
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "The address to query the balance of."
        },
        "return": "An uint256 representing the amount owned by the passed address."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Decrease the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.",
        "params": {
          "spender": "The address which will spend the funds.",
          "subtractedValue": "The amount of tokens to decrease the allowance by."
        }
      },
      "increaseAllowance(address,uint256)": {
        "details": "Increase the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.",
        "params": {
          "addedValue": "The amount of tokens to increase the allowance by.",
          "spender": "The address which will spend the funds."
        }
      },
      "mint(address,uint256)": {
        "details": "Function to mint tokens",
        "params": {
          "to": "The address that will receive the minted tokens.",
          "value": "The amount of tokens to mint."
        },
        "return": "A boolean that indicates if the operation was successful."
      },
      "totalSupply()": {
        "details": "Total number of tokens in existence"
      },
      "transfer(address,uint256)": {
        "details": "Transfer token for a specified address",
        "params": {
          "to": "The address to transfer to.",
          "value": "The amount to be transferred."
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfer tokens from one address to another. Note that while this function emits an Approval event, this is not required as per the specification, and other compliant implementations may not emit the event.",
        "params": {
          "from": "address The address which you want to send tokens from",
          "to": "address The address which you want to transfer to",
          "value": "uint256 the amount of tokens to be transferred"
        }
      }
    },
    "title": "ERC20Mintable"
  },
  "userdoc": {
    "methods": {}
  }
}